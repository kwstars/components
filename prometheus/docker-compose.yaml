services:
  prometheus:
    image: prom/prometheus:v2.45.4
    user: root
    command:
      - "--config.file=/etc/prometheus/prometheus.yml" # 指定配置文件
      - "--web.console.libraries=/usr/share/prometheus/console_libraries" # 指定控制台库目录
      - "--web.console.templates=/usr/share/prometheus/consoles" # 指定控制台模板目录
      - "--storage.tsdb.path=/prometheus" # 指定tsdb数据路径
      - "--storage.tsdb.retention.time=24h" # 数据保留时间
      - "--log.level=debug" # 启用调试日志
      - "--web.enable-admin-api" # 控制对admin HTTP API的访问，其中包括删除时间序列等功能
      - "--web.enable-lifecycle" # 支持热更新，直接执行localhost:9090/-/reload立即生效
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./first_rules.yml:/etc/prometheus/first_rules.yml
      - ./webserver_rules.yml:/etc/prometheus/webserver_rules.yml
      - ./database_rules.yml:/etc/prometheus/database_rules.yml
      - ./file_sd_configs.json:/etc/prometheus/file_sd_configs.json
      - /data/prometheus:/prometheus
    ports:
      - 9090:9090
    restart: unless-stopped

  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.7.0
    pid: host
    # network_mode: host
    ipc: host
    restart: unless-stopped # 确保在容器退出或者 Docker 重启后，容器能够自动重启
    security_opt:
      - no-new-privileges:true # 防止容器进程获取新的权限
    read_only: true # 将容器文件系统设置为只读，以增加安全性
    volumes:
      - "/proc:/host/proc:ro"
      - "/sys:/host/sys:ro"
      - "/:/rootfs:ro"
      - "/var/lib/node_exporter/textfile_collector/shadow.prom:/data/textfile_collector/shadow.prom:ro"
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--path.rootfs=/rootfs"
      - "--collector.textfile.directory=/data/textfile_collector" # 指定 textfile collector 的目录
    ports:
      - 9100:9100

  pushgateway:
    image: prom/pushgateway:v1.8.0
    # command:
    # - "--persistence.file=/data/pushgateway" # 持久化数据
    # - "--web.listen-address=9091"
    ports:
      - 9091:9091

  alertmanager:
    image: prom/alertmanager:v0.27.0
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
    ports:
      - 9093:9093

  grafana:
    image: grafana/grafana-oss:10.4.2-ubuntu
    user: root
    volumes:
      - /data/grafana:/var/lib/grafana
      - ./grafana.ini:/etc/grafana/grafana.ini
    ports:
      - 13000:3000

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly no", "--databases 64"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 3

  redis_exporter:
    image: oliver006/redis_exporter:v1.58.0
    ports:
      - "9121:9121"
    command:
      - "--redis.addr=redis://redis:6379"
    depends_on:
      - redis
      - prometheus

  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "mysql"
      MYSQL_DATABASE: test
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD

  # https://github.com/prometheus/mysqld_exporter/issues/750
  # https://github.com/prometheus/mysqld_exporter/issues/754
  mysqld_exporter:
    image: prom/mysqld-exporter-linux-amd64:v0.15.1
    ports:
      - "9104:9104"
    # environment:
    # - DATA_SOURCE_NAME="root:mysql@(mysql:3306)/test"
    # command:
    #   - "--collect.global_status"
    #   - "--collect.info_schema.innodb_metrics"
    # volumes:
    #   - .my.cnf:/root/.my.cnf
    command:
      # - "--config.my-cnf=/root/.my.cnf"
      - "--mysqld.username=root:mysql"
    # #  - "--mysqld.address=host:port"
    depends_on:
      - mysql
      - prometheus

  mongodb:
    image: mongo:7.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongodb
    ports:
      - 27017:27017

  mongodb_exporter:
    image: percona/mongodb_exporter:0.40
    ports:
      - "9216:9216"
    environment:
      MONGODB_URI: "mongodb://root:mongodb@mongodb:27017/"
    depends_on:
      - mongodb
      - prometheus

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.15
    environment:
      - node.name=elasticsearch
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - discovery.type=single-node
    ports:
      - 9200:9200
      - 9300:9300

  elasticsearch_exporter:
    image: prometheuscommunity/elasticsearch-exporter:v1.7.0
    ports:
      - "9114:9114"
    environment:
      ES_URI: "http://elasticsearch:9200"
    depends_on:
      - elasticsearch

  consul:
    image: consul:1.15
    ports:
      - 8500:8500
    environment:
      - CONSUL_BIND_INTERFACE=eth0
    command: ["consul", "agent", "-dev", "-client", "0.0.0.0"]

networks:
  default:
    name: monitoring
    driver: bridge
