services:
  mongo1:
    image: mongodb/mongodb-community-server:7.0-ubuntu2204
    container_name: mongo1
    # environment:
    #   MONGODB_INITDB_ROOT_USERNAME: root
    #   MONGODB_INITDB_ROOT_PASSWORD: mongodb
    command: ["--replSet", "rs0"]
    volumes:
      - mongodata01:/data/db
    ports:
      - 30001:27017
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--username",
          "root",
          "--password",
          "mongodb",
          "--quiet",
          "--eval",
          "'quit(db.adminCommand({ ping: 1 }).ok ? 0 : 2)'",
        ]
    # healthcheck:
    #   test: test $$(echo "rs.initiate({_id:'my-replica-set',members:[{_id:0,host:\"mongo1:30001\"},{_id:1,host:\"mongo2:30002\"},{_id:2,host:\"mongo3:30003\"}]}).ok || rs.status().ok" | mongo --port 30001 --quiet) -eq 1
    #   interval: 10s
    #   start_period: 30s

  mongo2:
    image: mongodb/mongodb-community-server:7.0-ubuntu2204
    container_name: mongo2
    # environment:
    #   MONGODB_INITDB_ROOT_USERNAME: root
    #   MONGODB_INITDB_ROOT_PASSWORD: mongodb
    command: ["--replSet", "rs0"]
    volumes:
      - mongodata02:/data/db
    ports:
      - 30002:27017
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--username",
          "root",
          "--password",
          "mongodb",
          "--quiet",
          "--eval",
          "'quit(db.adminCommand({ ping: 1 }).ok ? 0 : 2)'",
        ]

  mongo3:
    image: mongodb/mongodb-community-server:7.0-ubuntu2204
    container_name: mongo3
    # environment:
    #   MONGODB_INITDB_ROOT_USERNAME: root
    #   MONGODB_INITDB_ROOT_PASSWORD: mongodb
    command: ["--replSet", "rs0"]
    volumes:
      - mongodata03:/data/db
    ports:
      - 30003:27017
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--username",
          "root",
          "--password",
          "mongodb",
          "--quiet",
          "--eval",
          "'quit(db.adminCommand({ ping: 1 }).ok ? 0 : 2)'",
        ]

volumes:
  mongodata01:
    driver: local
  mongodata02:
    driver: local
  mongodata03:
    driver: local

networks:
  default:
    name: monitoring
