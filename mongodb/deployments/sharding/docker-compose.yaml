services:
  configsvr1:
    image: mongodb/mongodb-community-server:7.0-ubuntu2204
    container_name: configsvr1
    command: [
        "--configsvr", # Declare this is a config db of a  cluster; default port 27019; default dir /data/configdb
        "--replSet",
        "config-rs",
        "--wiredTigerCacheSizeGB",
        "0.5",
        "--oplogSize",
        "100",
      ]
    volumes:
      - configsvr1:/data/configdb
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--port",
          "27019",
          "--quiet",
          "--eval",
          "'quit(db.adminCommand({ ping: 1 }).ok ? 0 : 2)'",
        ]
      interval: 10s
      start_period: 30s
      timeout: 5s
      retries: 3

  shardsrv1:
    image: mongodb/mongodb-community-server:7.0-ubuntu2204
    container_name: shardsrv1
    command: [
        "--shardsvr", # Declare this is a shard db of a cluster; default port 27018
        "--replSet",
        "shard1-rs",
        "--wiredTigerCacheSizeGB",
        "0.5",
        "--oplogSize",
        "100",
      ]
    volumes:
      - shardsrv1:/data/db
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--port",
          "27018",
          "--quiet",
          "--eval",
          "'quit(db.adminCommand({ ping: 1 }).ok ? 0 : 2)'",
        ]
      interval: 10s
      start_period: 30s
      timeout: 5s
      retries: 3

  shardsrv4:
    image: mongodb/mongodb-community-server:7.0-ubuntu2204
    container_name: shardsrv4
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2-rs",
        "--wiredTigerCacheSizeGB",
        "0.5",
        "--oplogSize",
        "100",
      ]
    volumes:
      - shardsrv4:/data/db
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--port",
          "27018",
          "--quiet",
          "--eval",
          "'quit(db.adminCommand({ ping: 1 }).ok ? 0 : 2)'",
        ]
      interval: 10s
      start_period: 30s
      timeout: 5s
      retries: 3

  mongos1:
    image: mongodb/mongodb-community-server:7.0-ubuntu2204
    container_name: mongos1
    command: ["mongos", "--configdb", "config-rs/configsvr1:27019"]
    ports:
      - "27017:27017"
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--quiet",
          "--eval",
          "'quit(db.adminCommand({ ping: 1 }).ok ? 0 : 2)'",
        ]

volumes:
  configsvr1:
    driver: local
  shardsrv1:
    driver: local
  shardsrv4:
    driver: local

networks:
  default:
    name: monitoring
